---
- name: Create kubeconfig directory
  file:
    path: '{{ kubeconfig_dir }}'
    state: directory
  tags:
    - always

- name: Generate kubeconfig file for kube-controller-manager
  copy:
    content: |
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            certificate-authority-data: {{ lookup('file', '{{ k8s_pki_dir }}/k8s-ca.crt') | b64encode }}
            server: https://127.0.0.1:6443
          name: {{ cluster_name }}
      contexts:
        - context:
            cluster: {{ cluster_name }}
            user: default-controller-manager
          name: default
      current-context: default
      preferences: {}
      users:
        - name: default-controller-manager
          user:
            client-certificate-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-controller-manager.crt') | b64encode }}
            client-key-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-controller-manager.key') | b64encode }}
    dest: "{{ kubeconfig_dir }}/kube-controller-manager.kubeconfig"
  tags:
    - master

- name: Generate kubeconfig file for kube-scheduler
  copy:
    content: |
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            certificate-authority-data: {{ lookup('file', '{{ k8s_pki_dir }}/k8s-ca.crt') | b64encode }}
            server: https://127.0.0.1:6443
          name: {{ cluster_name }}
      contexts:
        - context:
            cluster: {{ cluster_name }}
            user: default-manager
          name: default
      current-context: default
      preferences: {}
      users:
        - name: default-manager
          user:
            client-certificate-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-scheduler.crt') | b64encode }}
            client-key-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-scheduler.key') | b64encode }}
    dest: "{{ kubeconfig_dir }}/kube-scheduler.kubeconfig"
  tags:
    - master

- name: Generate kubeconfig file for the admin user
  copy:
    content: |
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            certificate-authority-data: {{ lookup('file', '{{ k8s_pki_dir }}/k8s-ca.crt') | b64encode }}
            server: https://{{ hostvars['loadbalancer']['ansible_host'] }}:6443
          name: {{ cluster_name }}
      contexts:
        - context:
            cluster: {{ cluster_name }}
            user: default-admin
          name: default
      current-context: default
      preferences: {}
      users:
        - name: default-admin
          user:
            client-certificate-data: {{ lookup('file', '{{ user_accounts_pki_dir }}/admin.crt') | b64encode }}
            client-key-data: {{ lookup('file', '{{ user_accounts_pki_dir }}/admin.key') | b64encode }}
    dest: "{{ kubeconfig_dir }}/admin.kubeconfig"
  tags:
    - admin

- name: Generate kuebconfig for kubelets
  copy:
    content: |
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            certificate-authority-data: {{ lookup('file', '{{ k8s_pki_dir }}/k8s-ca.crt') | b64encode }}
            server: https://{{ hostvars['loadbalancer']['ansible_host'] }}:6443
          name: {{ cluster_name }}
      contexts:
        - context:
            cluster: {{ cluster_name }}
            user: system:node:{{ item }}
          name: default
      current-context: default
      preferences: {}
      users:
        - name: system:node:{{ item }}
          user:
            client-certificate-data: {{ lookup('file', '{{ k8s_pki_dir }}/{{ item }}.crt') | b64encode }}
            client-key-data: {{ lookup('file', '{{ k8s_pki_dir }}/{{ item }}.key') | b64encode }}
    dest: "{{ kubeconfig_dir }}/{{ item }}.kubeconfig"
  loop: "{{ groups['node'] }}"
  tags:
    - node
    - kubelet

- name: Generate kubeconfig for kube-proxy
  copy:
    content: |
      apiVersion: v1
      kind: Config
      clusters:
        - cluster:
            certificate-authority-data: {{ lookup('file', '{{ k8s_pki_dir }}/k8s-ca.crt') | b64encode }}
            server: https://{{ hostvars['loadbalancer']['ansible_host'] }}:6443
          name: {{ cluster_name }}
      contexts:
      - context:
          cluster: {{ cluster_name }}
          user: kube-proxy
        name: default
      current-context: default
      preferences: {}
      users:
        - name: kube-proxy
          user:
            client-certificate-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-proxy.crt') | b64encode }}
            client-key-data: {{ lookup('file', '{{ k8s_pki_dir }}/kube-proxy.key') | b64encode }}
    dest: "{{ kubeconfig_dir }}/kube-proxy.kubeconfig"
  tags:
    - node
    - kube-proxy
