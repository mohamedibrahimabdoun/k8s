# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  config.vm.box = "bento/ubuntu-18.04"

  config.vm.define "k8smaster" do |kube|
    kube.vm.hostname = "k8smaster"
    #config.vm.provision "file", source: "/Users/mohamed/cloud_development/k8s/vagrant-kube-cluster/hosts_vmware", destination: "/etc/hosts"
    #config.vm.provision "file", source: "/Users/mohamed/cloud_development/k8s/vagrant-kube-cluster/kubernetes.list", destination: "/etc/apt/sources.list.d/kubernetes.list"
    kube.vm.synced_folder ".", "/vagrant"
    kube.vm.network "private_network", ip: "172.16.206.100"
    kube.vm.provision "file", source: "./ssh/id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
    #public_key = File.read("/vagrant/ssh/id_rsa.pub")
   config.vm.provider "vmware_desktop" do |vmware|   
      vmware.allowlist_verified = true
      vmware.gui = true
      vmware.vmx["memsize"] = "8024"
      vmware.vmx["numvcpus"] = "2"
   end
    kube.vm.provision "shell", inline: $master_script
  end
 
config.vm.define "kube01" do |kube|
   kube.vm.hostname = "kube01"
   kube.vm.synced_folder ".", "/vagrant"
   kube.vm.network "private_network", ip: "172.16.206.101"
   #public_key = File.read("/vagrant/ssh/id_rsa.pub")
   kube.vm.provision "file", source: "./ssh/id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
   config.vm.provider "vmware_desktop" do |vmware|   
     vmware.allowlist_verified = true
     vmware.gui = true 
     vmware.vmx["memsize"] = "4024"
    vmware.vmx["numvcpus"] = "2" 
  end
   kube.vm.provision "shell", inline: $worker_script
 end

config.vm.define "kube02" do |kube|
   kube.vm.hostname = "kube02"
   kube.vm.synced_folder ".", "/vagrant"
   kube.vm.network "private_network", ip: "172.16.206.102"
   #public_key = File.read("/vagrant/ssh/id_rsa.pub")
   kube.vm.provision "file", source: "./ssh/id_rsa", destination: "/home/vagrant/.ssh/id_rsa"
   config.vm.provider "vmware_desktop" do |vmware|   
     vmware.allowlist_verified = true
     vmware.gui = true
     vmware.vmx["memsize"] = "4024"
      vmware.vmx["numvcpus"] = "2"  
   end
   kube.vm.provision "shell", inline: $worker_script
 end



$master_script = <<SCRIPT
echo I am provisioning...
echo setting ssh key and configs
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cat /vagrant/ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
sudo mkdir -p /root/.ssh && chmod 700 -R /root/.ssh && touch /root/.ssh/authorized_keys
sudo cat /vagrant/ssh/id_rsa.pub > /root/.ssh/authorized_keys
chmod -R 600 /home/vagrant/.ssh/authorized_keys
echo 'StrictHostKeyChecking no' >> /home/vagrant/.ssh/config
echo 'UserKnownHostsFile /dev/null' >> /home/vagrant/.ssh/config
 chmod -R 600 /home/vagrant/.ssh/config
sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
systemctl restart ssh
echo "####Setting root passowrd"
echo -e -n "r00tr00t\nr00tr00t" | sudo passwd root
sudo cp /vagrant/hosts_vmware /etc/hosts
echo I am turning off swap...
sudo echo "vm.swappiness=10" >> /etc/sysctl.conf
sudo sysctl --system
sudo swapoff -a
echo copying install_master.sh
sudo cp /vagrant/install_master.sh  /home/vagrant/install_master.sh
sudo chmod 600 /home/vagrant/install_master.sh
sudo sh /home/vagrant/install_master.sh
echo I am joining NFS...
sudo apt-get install nfs-common -y 
echo installing golang
apt install golang -y
echo "GOPATH=$HOME/golang" >> ~/.bashrc
echo "export GOPATH" >> ~/.bashrc
echo "PATH=\$PATH:\$GOPATH/bin # Add GOPATH/bin to PATH for scripting" >> ~/.bashrc
source ~/.bashrc

SCRIPT


$worker_script = <<SCRIPT
echo I am provisioning...
echo setting ssh key and configs
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cat /vagrant/ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
sudo mkdir -p /root/.ssh && chmod 700 -R /root/.ssh && touch /root/.ssh/authorized_keys
sudo cat /vagrant/ssh/id_rsa.pub > /root/.ssh/authorized_keys
chmod -R 600 /home/vagrant/.ssh/authorized_keys
echo 'StrictHostKeyChecking no' >> /home/vagrant/.ssh/config
echo 'UserKnownHostsFile /dev/null' >> /home/vagrant/.ssh/config
 chmod -R 600 /home/vagrant/.ssh/config
 sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
systemctl restart ssh
echo "####Setting root passowrd"
echo -e -n "r00tr00t\nr00tr00t" | sudo passwd root

sudo cp /vagrant/hosts_vmware /etc/hosts
echo I am turning off swap...
sudo echo "vm.swappiness=10" >> /etc/sysctl.conf
sudo sysctl --system
sudo swapoff -a
echo copying install_master.sh
sudo cp /vagrant/install_worker.sh  /home/vagrant/install_worker.sh
sudo chmod 600 /home/vagrant/install_worker.sh
sudo sh /home/vagrant/install_worker.sh
echo I am joining NFS...
sudo apt-get install nfs-common -y
echo $(id)
eval "sudo $(ssh -i /home/vagrant/.ssh/id_rsa -o StrictHostKeyChecking=no k8smaster 'kubeadm token create --print-join-command --ttl 0')"
SCRIPT

$script = <<SCRIPT
echo I am provisioning...
echo "r00tme" | passwd  root
sudo cp /vagrant/hosts_vmware /etc/hosts
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo cp /vagrant/kubernetes.list /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update 
sudo apt-get install  docker.io kubelet=1.19.14-00 kubeadm=1.19.14-00 kubectl=1.19.14-00 kubernetes-cni=0.8.7-00 -y
sudo rm -rf /var/lib/kubelet/*
echo I am turning off swap...
sudo echo "vm.swappiness=10" >> /etc/sysctl.conf
sudo sysctl --system
sudo swapoff -a
echo I am joining NFS...
sudo apt-get install nfs-common -y

SCRIPT

end
