# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/xenial64"

  config.vm.define "k8s-master01" do |kube|
    kube.vm.hostname = "k8s-master01"
    kube.vm.network "private_network", ip: "192.168.1.11"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end  
    kube.vm.provision "shell", inline: $script_master
  end
 
 config.vm.define "kube-01" do |kube|
    kube.vm.hostname = "kube-01"
    kube.vm.network "private_network", ip: "192.168.1.12"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
    kube.vm.provision "shell", inline: $script
  end
  
    config.vm.define "k8s-master02" do |kube|
    kube.vm.hostname = "k8s-master02"
    kube.vm.network "private_network", ip: "192.168.1.21"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end  
    kube.vm.provision "shell", inline: $script_master
  end

 config.vm.define "kube-02" do |kube|
    kube.vm.hostname = "kube-02"
    kube.vm.network "private_network", ip: "192.168.1.22"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
    kube.vm.provision "shell", inline: $script
  end
  
    config.vm.define "k8s-master03" do |kube|
    kube.vm.hostname = "k8s-master03"
    kube.vm.network "private_network", ip: "192.168.1.31"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end  
    kube.vm.provision "shell", inline: $script_master
  end
 
 
   config.vm.define "kube-03" do |kube|
    kube.vm.hostname = "kube-03"
    kube.vm.network "private_network", ip: "192.168.1.32"
    config.vm.provider :virtualbox do |vb|
       vb.customize ["modifyvm", :id, "--memory", "2048"]
       vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
    kube.vm.provision "shell", inline: $script
  end
  

$script_master = <<SCRIPT
echo I am provisioning master...
sudo add-apt-repository ppa:vbernat/haproxy-1.5
sudo apt-get update -y
sudo apt-get dist-upgrade -y
#echo "r00tme" | passwd  root
#sudo cp /vagrant/hosts /etc/hosts
#curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
#sudo cp /vagrant/kubernetes.list /etc/apt/sources.list.d/kubernetes.list
#sudo apt-get update 
#sudo apt-get install -y docker.io kubelet kubeadm kubectl kubernetes-cni
#sudo rm -rf /var/lib/kubelet/*
#echo I am turning off swap...
#sudo swapoff -a
#echo I am joining NFS...
#sudo apt-get install nfs-common -y

SCRIPT


$script = <<SCRIPT
echo I am provisioning slaves...
SCRIPT
end
